version: '3.8'

services:
  # Balanceador de carga - NGINX
  load-balancer:
    build: ../load-balancer
    container_name: proyecto-load-balancer
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app1
      - app2
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - nginx-logs:/var/log/nginx

  # Servidor de aplicación 1
  app1:
    build: 
      context: ../app-servers
      dockerfile: Dockerfile
    container_name: proyecto-app1
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SERVER_NAME=app1
      - DB_HOST=db-master
      - DB_PORT=3306
      - DB_NAME=crud_app
      - DB_USER=app_user
      - DB_PASSWORD=secure_password_123
      - JWT_SECRET=mi_clave_secreta_super_segura_2023
    ports:
      - "3001:3001"
    depends_on:
      - db-master
      - db-slave
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - app1-logs:/app/logs
    command: ["npm", "run", "start:app1"]

  # Servidor de aplicación 2
  app2:
    build: 
      context: ../app-servers
      dockerfile: Dockerfile
    container_name: proyecto-app2
    environment:
      - NODE_ENV=production
      - PORT=3002
      - SERVER_NAME=app2
      - DB_HOST=db-master
      - DB_PORT=3306
      - DB_NAME=crud_app
      - DB_USER=app_user
      - DB_PASSWORD=secure_password_123
      - JWT_SECRET=mi_clave_secreta_super_segura_2023
    ports:
      - "3002:3002"
    depends_on:
      - db-master
      - db-slave
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - app2-logs:/app/logs
    command: ["npm", "run", "start:app2"]

  # Base de datos Master
  db-master:
    build: ../database/master
    container_name: proyecto-db-master
    environment:
      - MYSQL_ROOT_PASSWORD=root_password_123
      - MYSQL_DATABASE=crud_app
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=secure_password_123
    ports:
      - "3306:3306"
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - db-master-data:/var/lib/mysql
      - db-master-logs:/var/log/mysql
    command: ["mysqld", "--server-id=1", "--log-bin=mysql-bin", "--binlog-format=ROW"]

  # Base de datos Slave
  db-slave:
    build: ../database/slave
    container_name: proyecto-db-slave
    environment:
      - MYSQL_ROOT_PASSWORD=root_password_123
      - MYSQL_DATABASE=crud_app
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=secure_password_123
    ports:
      - "3307:3307"
    depends_on:
      - db-master
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - db-slave-data:/var/lib/mysql
      - db-slave-logs:/var/log/mysql
    command: ["mysqld", "--server-id=2", "--port=3307"]

  # Servidor FTP
  ftp-server:
    build: ../ftp-server
    container_name: proyecto-ftp-server
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ftp-data:/var/ftp
      - ftp-logs:/var/log

  # Herramientas de monitoreo (opcional)
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: proyecto-phpmyadmin
  #   environment:
  #     - PMA_HOSTS=db-master,db-slave
  #     - PMA_PORTS=3306,3307
  #     - MYSQL_ROOT_PASSWORD=root_password_123
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     - db-master
  #     - db-slave
  #   networks:
  #     - app-network

# Redes
networks:
  app-network:
    driver: bridge
    name: proyecto-final-network

# Volúmenes
volumes:
  # Bases de datos
  db-master-data:
    name: proyecto-db-master-data
  db-slave-data:
    name: proyecto-db-slave-data
  db-master-logs:
    name: proyecto-db-master-logs
  db-slave-logs:
    name: proyecto-db-slave-logs
  
  # Aplicaciones
  app1-logs:
    name: proyecto-app1-logs
  app2-logs:
    name: proyecto-app2-logs
  
  # Nginx
  nginx-logs:
    name: proyecto-nginx-logs
  
  # FTP
  ftp-data:
    name: proyecto-ftp-data
  ftp-logs:
    name: proyecto-ftp-logs
